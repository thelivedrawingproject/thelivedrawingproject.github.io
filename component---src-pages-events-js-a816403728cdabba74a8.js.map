{"version":3,"file":"component---src-pages-events-js-a816403728cdabba74a8.js","mappings":"o1BAsDe,SAASA,EAAT,GAAgE,IAA9CC,EAA6C,EAA7CA,KAAqBC,EAAwB,EAAvCC,YAAeD,SAAYE,EAAY,EAAZA,SAC1DC,EAAQC,EAAAA,GAAiBJ,GACzBK,EAAQN,EAAKO,OAAOC,MAG1B,OACE,QAAC,IAAD,CAAYC,SAAUR,EAAUE,SAAQ,KAAOA,KAC7C,QAAC,IAAD,CAAKO,MAAO,SAAUT,SAAUA,KAEhC,eAAKU,UAAW,iBAId,cAAIA,UAAW,aAAcP,EAAMQ,SACnC,eAAKD,UAAU,mBACb,QAAC,IAAD,CACEL,MAAOA,EACJO,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAKC,YAAYN,MAAMO,OAAS,KACtDJ,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAKC,YAAYP,WAAaR,KACpDY,QAAO,SAACC,EAAMI,GACb,OAAOA,EAhEM,QAmEnB,eACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,UAAW,UAGb,kBACEC,GAAG,sBACHZ,UAAW,cACXQ,MAAO,CAAEG,UAAW,OACpBE,QAAS,WACCC,SAASC,eAAe,aAC9BP,MAAMC,QAAU,GACVK,SAASC,eAAe,uBAC9BP,MAAMC,QAAU,SAGnBhB,EAAMuB,kBAGX,eAAKhB,UAAU,WAAWY,GAAG,YAAYJ,MAAO,CAAEC,QAAS,UACzD,QAAC,IAAD,CACEd,MAAOA,EACJO,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAKC,YAAYN,MAAMO,OAAS,KACtDJ,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAKC,YAAYP,WAAaR,KACpDY,QAAO,SAACC,EAAMI,GACb,OA9FW,GA8FoBA,WAM3C,eAAKP,UAAU,mBACb,eAAKA,UAAU,iBACb,QAAC,EAAAiB,KAAD,CAAMC,GAAI,YAAazB,EAAM0B","sources":["webpack://livedrawingproject-showcase/./src/pages/events.js"],"sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport MainLayout from '../layout/MainLayout';\nimport SEO from '../bits/SEO/SEO';\nimport { indexPageStrings } from '../locales/strings';\nimport PostGridFlat from '../bits/PostGridFlatTLDP/PostGridFlat';\nimport './index.scss';\nimport './basics.scss';\nimport './ShowcasePage.scss';\n\nconst numberOfEventsToShow = 6;\nconst icon = {\n  hidden: {\n    opacity: 1,\n    pathLength: 0,\n    fill: 'rgba(0,0,0,0',\n    stroke: 'rgba(0,0,0,0)',\n    strokeWidth: 2,\n  },\n  visible: {\n    opacity: 1,\n    pathLength: 1,\n    fill: 'rgba(0,0,0,0',\n    stroke: 'white',\n    strokeWidth: 2,\n  },\n};\n\n/*\n        <div className={'ResponsiveContainer SpecialAnnouncementBackground'}>\n          <div className={'Inside'}>\n            <div className=\"ShowcasePart Column\">\n              <div className={'Text Centered SpecialAnnouncement'}>\n                <h2\n                  className={'SpecialAnnouncementTitle'}\n                  style={{ color: 'white' }}\n                >\n                  {LOCAL.announcementTitle}\n                </h2>\n                <p\n                  className={'SpecialAnnouncementSubtitle'}\n                  style={{ color: 'white' }}\n                >\n                  {LOCAL.announcemenSubtitle}\n                </p>\n                <Link to={onlineModeLink[langCode].path}>\n                  {onlineModeLink[langCode].name}\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        */\nexport default function Events({ data, pageContext: { langCode }, location }) {\n  const LOCAL = indexPageStrings[langCode];\n  const posts = data.allMdx.edges;\n  const localesOptions = { year: 'numeric', month: 'long', day: 'numeric' };\n\n  return (\n    <MainLayout language={langCode} location={{ ...location }}>\n      <SEO title={'Events'} langCode={langCode} />\n\n      <div className={'ShowcasePage'}>\n      \n\n\n        <h2 className={'Punchline'}>{LOCAL.events}</h2>\n        <div className=\"home homePosts\">\n          <PostGridFlat\n            posts={posts\n              .filter((post) => post.node.frontmatter.title.length > 0)\n              .filter((post) => post.node.frontmatter.language === langCode)\n              .filter((post, index) => {\n                return index < numberOfEventsToShow;\n              })}\n          />\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              marginTop: '1rem',\n            }}\n          >\n            <button\n              id=\"showAllEventsButton\"\n              className={'greenButton'}\n              style={{ marginTop: '2em' }}\n              onClick={() => {\n                let t = document.getElementById('oldEvents');\n                t.style.display = '';\n                let d = document.getElementById('showAllEventsButton');\n                d.style.display = 'none';\n              }}\n            >\n              {LOCAL.showMoreEvents}\n            </button>\n          </div>\n          <div className=\"postGrid\" id=\"oldEvents\" style={{ display: 'none' }}>\n            <PostGridFlat\n              posts={posts\n                .filter((post) => post.node.frontmatter.title.length > 0)\n                .filter((post) => post.node.frontmatter.language === langCode)\n                .filter((post, index) => {\n                  return numberOfEventsToShow <= index;\n                })}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"home homePosts\">\n        <div className=\"moreProjects\">\n          <Link to={'/booking'}>{LOCAL.goToAbout}</Link>\n        </div>\n      </div>\n    </MainLayout>\n  );\n}\n\nexport const eventPageQuery = graphql`\n  query EventsQuery {\n    backgrounds: allFile(filter: { absolutePath: { regex: \"/backgrounds/\" } }) {\n      nodes {\n        relativePath\n        childImageSharp {\n          fluid(maxWidth: 1400, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    imagePhone: file(relativePath: { eq: \"gallery/showcase/phone.jpg\" }) {\n      ...modernGatImage\n    }\n    imageChevagny: file(relativePath: { eq: \"gallery/showcase/chev.jpg\" }) {\n      ...modernGatImage\n    }\n    imageArt: file(relativePath: { eq: \"gallery/showcase/permanent.jpg\" }) {\n      ...modernGatImage\n    }\n    imageRemote: file(relativePath: { eq: \"gallery/showcase/remote.jpg\" }) {\n      ...modernGatImage\n    }\n    gridA: file(relativePath: { eq: \"gallery/showcase/cn.jpg\" }) {\n      ...modernGatImage\n    }\n    gridB: file(relativePath: { eq: \"gallery/showcase/b.jpg\" }) {\n      ...modernGatImage\n    }\n    gridC: file(relativePath: { eq: \"gallery/showcase/glow1.jpg\" }) {\n      ...modernGatImage\n    }\n    gridD: file(relativePath: { eq: \"gallery/showcase/glow2.jpg\" }) {\n      ...modernGatImage\n    }\n    gridE: file(relativePath: { eq: \"gallery/showcase/chev0.jpg\" }) {\n      ...modernGatImage\n    }\n    gridF: file(relativePath: { eq: \"gallery/showcase/chev.jpg\" }) {\n      ...modernGatImage\n    }\n    gridG: file(relativePath: { eq: \"2020-04-01-stayhome/26v_2_webw.jpg\" }) {\n      ...modernGatImage\n    }\n    gridH: file(\n      relativePath: { eq: \"2020-03-05-spraying-board/SprayingBoard_8.jpg\" }\n    ) {\n      ...modernGatImage\n    }\n    gridI: file(relativePath: { eq: \"2019-10-20-mur/CHRD-5.jpg\" }) {\n      ...modernGatImage\n    }\n    allMdx(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { category: { eq: \"event\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            endDate(formatString: \"MMMM DD, YYYY\")\n            path\n            category\n            subtitle\n            language\n            image {\n              childImageSharp {\n                gatsbyImageData(height: 500, placeholder: BLURRED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Events","data","langCode","pageContext","location","LOCAL","indexPageStrings","posts","allMdx","edges","language","title","className","events","filter","post","node","frontmatter","length","index","style","display","justifyContent","marginTop","id","onClick","document","getElementById","showMoreEvents","Link","to","goToAbout"],"sourceRoot":""}