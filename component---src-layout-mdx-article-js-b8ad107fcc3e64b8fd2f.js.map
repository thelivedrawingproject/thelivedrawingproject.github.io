{"version":3,"file":"component---src-layout-mdx-article-js-b8ad107fcc3e64b8fd2f.js","mappings":"w2BAUe,SAASA,EAAT,GAA6D,IAAjCC,EAAgC,EAAxCC,KAAQD,IAAOE,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAClDC,EAAqCD,EAArCC,aAAcC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAG1BC,EAAmBH,GACvB,QAAC,EAAAI,KAAD,CAAMC,GAAIL,EAAaM,YAAYC,MAAnC,KACKP,EAAaM,YAAYE,QAG9B,oBAEIC,EAAeR,EACnBA,IACE,QAAC,EAAAG,KAAD,CAAMC,GAAIJ,EAASK,YAAYC,MAAON,EAASK,YAAYE,MAA3D,OAGF,oBAGF,OACE,QAAC,IAAD,CAAYE,SAAUd,EAAIU,YAAYI,SAAUZ,SAAQ,KAAOA,KAC7D,QAAC,IAAD,CACEU,MAAOZ,EAAIU,YAAYE,MACvBG,YAAaf,EAAIU,YAAYK,aAAef,EAAIU,YAAYM,SAC5DC,MAAOjB,EAAIU,YAAYO,MAAMC,gBAAgBC,MAAMC,IACnDC,SAAUrB,EAAIU,YAAYC,KAC1BW,SAAS,EACTR,SAAUR,KAEZ,eAAKiB,UAAU,YAAYC,GAAG,YAC5B,eAAKD,UAAU,YACb,cAAIA,UAAU,aAAavB,EAAIU,YAAYE,QAC3C,cAAIW,UAAU,YACZ,kBACE,sBAASvB,EAAIU,YAAYM,SAAzB,MACA,mBAAO,KACP,kBACG,IAAIS,KAAKzB,EAAIU,YAAYgB,MAAMC,mBAC9B3B,EAAIU,YAAYI,SAChB,CAAEc,KAAM,UAAWC,MAAO,eAQtC,eAAKN,UAAU,SACb,mBACEA,UAAU,OACVO,WAAS,EACTC,SAAS,kCAET,eAAKR,UAAU,YACb,oBACA,oBACA,QAAC,EAAAS,YAAD,CAAaC,WAAYC,EAAAA,KACvB,QAAC,EAAAC,YAAD,CACEC,aAAcpC,EAAIU,YAAY2B,qBAC9BC,YAAatC,EAAIU,YAAY6B,qBAE5BvC,EAAIwC,QAGT,eAAKjB,UAAU,iBACZhB,EACAM","sources":["webpack://livedrawingproject-showcase/./src/layout/MdxArticle.js"],"sourcesContent":["import React from 'react';\nimport MainLayout from './MainLayout';\nimport './BasicPage.scss';\nimport 'moment';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport SEO from '../bits/SEO/SEO';\nimport { graphql, Link } from 'gatsby';\nimport { SHORTCODES } from './MdxBits';\n\nexport default function Template({ data: { mdx }, location, pageContext }) {\n  const { previousPost, nextPost, langCode } = pageContext;\n\n  // content is at false is no previous or next\n  const previousPostHtml = previousPost ? (\n    <Link to={previousPost.frontmatter.path}>\n      ← {previousPost.frontmatter.title}\n    </Link>\n  ) : (\n    <div></div>\n  );\n  const nextPostHtml = nextPost ? (\n    nextPost && (\n      <Link to={nextPost.frontmatter.path}>{nextPost.frontmatter.title} →</Link>\n    )\n  ) : (\n    <div></div>\n  );\n\n  return (\n    <MainLayout language={mdx.frontmatter.language} location={{ ...location }}>\n      <SEO\n        title={mdx.frontmatter.title}\n        description={mdx.frontmatter.description || mdx.frontmatter.subtitle}\n        image={mdx.frontmatter.image.childImageSharp.fixed.src}\n        pathname={mdx.frontmatter.path}\n        article={true}\n        language={langCode}\n      />\n      <div className=\"coverBand\" id=\"content\">\n        <div className=\"overlay\">\n          <h1 className=\"punchline\">{mdx.frontmatter.title}</h1>\n          <h2 className=\"subtext\">\n            <p>\n              <strong>{mdx.frontmatter.subtitle} </strong>\n              <br />{' '}\n              <em>\n                {new Date(mdx.frontmatter.date).toLocaleDateString(\n                  mdx.frontmatter.language,\n                  { year: 'numeric', month: 'long' }\n                )}\n              </em>\n            </p>\n          </h2>\n        </div>\n      </div>\n\n      <div className=\"Page\">\n        <article\n          className=\"card\"\n          itemScope\n          itemType=\"http://schema.org/BlogPosting\"\n        >\n          <div className=\"article\">\n            <br />\n            <br />\n            <MDXProvider components={SHORTCODES}>\n              <MDXRenderer\n                remoteImages={mdx.frontmatter.embeddedImagesRemote}\n                localImages={mdx.frontmatter.embeddedImagesLocal}\n              >\n                {mdx.body}\n              </MDXRenderer>\n            </MDXProvider>\n            <div className=\"prevNextLinks\">\n              {previousPostHtml}\n              {nextPostHtml}\n            </div>\n          </div>\n        </article>\n      </div>\n    </MainLayout>\n  );\n}\n\n//  <div className=\"content\" itemProp=\"articleBody\" dangerouslySetInnerHTML={{ __html: post.html }}/>\n\nexport const pageQuery = graphql`\n  query MdxArticleByPath($path: String!) {\n    mdx(frontmatter: { path: { eq: $path } }) {\n      body\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        subtitle\n        language\n        description\n        embeddedImagesRemote {\n          ...modernGatImage\n        }\n        embeddedImagesLocal {\n          ...modernGatImage\n        }\n        image {\n          childImageSharp {\n            # Other options include height (set both width and height to crop),\n            # grayscale, duotone, rotate, etc.\n            fixed(width: 700) {\n              # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\n              ...GatsbyImageSharpFixed\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Template","mdx","data","location","pageContext","previousPost","nextPost","langCode","previousPostHtml","Link","to","frontmatter","path","title","nextPostHtml","language","description","subtitle","image","childImageSharp","fixed","src","pathname","article","className","id","Date","date","toLocaleDateString","year","month","itemScope","itemType","MDXProvider","components","SHORTCODES","MDXRenderer","remoteImages","embeddedImagesRemote","localImages","embeddedImagesLocal","body"],"sourceRoot":""}